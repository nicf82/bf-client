/*
 * This file was generated by guardrail (https://github.com/guardrail-dev/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package swagger.definitions

import cats.syntax.either._
import io.circe._
import io.circe.syntax._
import cats.implicits._
import _root_.swagger.Implicits._
case class KeyLineDefinition(kl: Option[_root_.scala.Vector[KeyLineSelection]] = None)
object KeyLineDefinition {
  implicit val encodeKeyLineDefinition: _root_.io.circe.Encoder.AsObject[KeyLineDefinition] = {
    val readOnlyKeys = _root_.scala.Predef.Set[_root_.scala.Predef.String]()
    _root_.io.circe.Encoder.AsObject.instance[KeyLineDefinition](a => _root_.io.circe.JsonObject.fromIterable(_root_.scala.Vector(("kl", a.kl.asJson)))).mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeKeyLineDefinition: _root_.io.circe.Decoder[KeyLineDefinition] = new _root_.io.circe.Decoder[KeyLineDefinition] { final def apply(c: _root_.io.circe.HCursor): _root_.io.circe.Decoder.Result[KeyLineDefinition] = for (v0 <- c.downField("kl").as[Option[_root_.scala.Vector[KeyLineSelection]]]) yield KeyLineDefinition(v0) }
}