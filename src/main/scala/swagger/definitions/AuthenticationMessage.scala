/*
 * This file was generated by guardrail (https://github.com/guardrail-dev/guardrail).
 * Modifications will be overwritten; instead edit the OpenAPI/Swagger spec file.
 */
package swagger.definitions

import cats.syntax.either._
import io.circe._
import io.circe.syntax._
import cats.implicits._
import _root_.swagger.Implicits._
case class AuthenticationMessage(id: Option[Int] = None, session: Option[String] = None, appKey: Option[String] = None) extends RequestMessage
object AuthenticationMessage {
  implicit val encodeAuthenticationMessage: _root_.io.circe.Encoder.AsObject[AuthenticationMessage] = {
    val readOnlyKeys = _root_.scala.Predef.Set[_root_.scala.Predef.String]()
    _root_.io.circe.Encoder.AsObject.instance[AuthenticationMessage](a => _root_.io.circe.JsonObject.fromIterable(_root_.scala.Vector(("id", a.id.asJson), ("session", a.session.asJson), ("appKey", a.appKey.asJson)))).mapJsonObject(_.filterKeys(key => !(readOnlyKeys contains key)))
  }
  implicit val decodeAuthenticationMessage: _root_.io.circe.Decoder[AuthenticationMessage] = new _root_.io.circe.Decoder[AuthenticationMessage] { final def apply(c: _root_.io.circe.HCursor): _root_.io.circe.Decoder.Result[AuthenticationMessage] = for (v0 <- c.downField("id").as[Option[Int]]; v1 <- c.downField("session").as[Option[String]]; v2 <- c.downField("appKey").as[Option[String]]) yield AuthenticationMessage(v0, v1, v2) }
}